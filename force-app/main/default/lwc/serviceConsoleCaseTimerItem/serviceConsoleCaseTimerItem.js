/*****************************************************************************************************************************
*
* Imports
*
*****************************************************************************************************************************/
import { LightningElement, api } from 'lwc';
import { NavigationMixin } from 'lightning/navigation';

export default class ServiceConsoleCaseTimerItem extends NavigationMixin(LightningElement) {
    /*****************************************************************************************************************************
    *
    * Public Variables
    *
    *****************************************************************************************************************************/
    _session;
    @api
    get session(){
        return this._session;
    }
    set session(value){
        if(value){
            this._session = value;
            this.formattedTime = this.formatTime(value.Duration__c);
        }
    }

    /*****************************************************************************************************************************
    *
    * Private Variables
    *
    *****************************************************************************************************************************/
    formattedTime;

    /*****************************************************************************************************************************
    *
    * LifeCycle Hooks (renderedCallback,connectedCallback,disconnectedCallback)
    *
    *****************************************************************************************************************************/

    /*****************************************************************************************************************************
    *
    * UI Getters - Custom getters for variables in the HTML
    *
    *****************************************************************************************************************************/

    /*****************************************************************************************************************************
    *
    * Wire
    *
    *****************************************************************************************************************************/

    /*****************************************************************************************************************************
    *
    * Event Handlers
    *
    *****************************************************************************************************************************/
    handleClickedRecord(event){
        const recId = event.target.dataset.targetId;

        this.dispatchEvent(new CustomEvent('sendrecordid',{
            detail : recId,
        }));
    }

    /*****************************************************************************************************************************
    *
    * Logic / Helper methods
    *
    *****************************************************************************************************************************/
    formatTime(duration){
        let h, m, s = 0;

        h = Math.floor( duration / (60 * 60 ) );
        duration = duration % (60 * 60 );
        m = Math.floor( duration / (60 ) );
        duration = duration % (60 );
        s = Math.floor( duration );

        return this.pad(h, 2) + ':' + this.pad(m, 2) + ':' + this.pad(s, 2);
    }

    pad(num, size){
        let s = "0000" + num;
        return s.substring(s.length - size);
    }
}